from sqlalchemy import Column, Integer, Float, String, DateTime
from sqlalchemy.ext.declarative import declarative_base
from datetime import datetime

Base = declarative_base()

class WeatherDataMinutely(Base):
    __tablename__ = 'weather_data_minutely'
    time = Column(DateTime, primary_key=True)
    location = Column(String, primary_key=True)
    cloud_base = Column(Float)
    cloud_ceiling = Column(Float)
    cloud_cover = Column(Float)
    dew_point = Column(Float)
    freezing_rain_intensity = Column(Float)
    humidity = Column(Float)
    precipitation_probability = Column(Float)
    pressure_surface_level = Column(Float)
    rain_intensity = Column(Float)
    sleet_intensity = Column(Float)
    snow_intensity = Column(Float)
    temperature = Column(Float)
    temperature_apparent = Column(Float)
    uv_health_concern = Column(Integer)
    uv_index = Column(Integer)
    visibility = Column(Float)
    weather_code = Column(Integer)
    wind_direction = Column(Float)
    wind_gust = Column(Float)
    wind_speed = Column(Float)
    created_at = Column(DateTime, default=datetime.now)
    updated_at = Column(DateTime, default=datetime.now, onupdate=datetime.now)


class WeatherDataHourly(Base):
    __tablename__ = 'weather_data_hourly'
    time = Column(DateTime, primary_key=True)
    location = Column(String, primary_key=True)
    cloud_base = Column(Float)
    cloud_ceiling = Column(Float)
    cloud_cover = Column(Float)
    dew_point = Column(Float)
    freezing_rain_intensity = Column(Float)
    humidity = Column(Float)
    precipitation_probability = Column(Float)
    pressure_surface_level = Column(Float)
    rain_intensity = Column(Float)
    sleet_intensity = Column(Float)
    snow_intensity = Column(Float)
    temperature = Column(Float)
    temperature_apparent = Column(Float)
    uv_health_concern = Column(Integer)
    uv_index = Column(Integer)
    visibility = Column(Float)
    weather_code = Column(Integer)
    wind_direction = Column(Float)
    wind_gust = Column(Float)
    wind_speed = Column(Float)
    created_at = Column(DateTime, default=datetime.now)
    updated_at = Column(DateTime, default=datetime.now, onupdate=datetime.now)


class WeatherDataDaily(Base):
    __tablename__ = 'weather_data_daily'
    time = Column(DateTime, primary_key=True)
    location = Column(String, primary_key=True)
    cloud_base_avg = Column(Float)
    cloud_base_max = Column(Float)
    cloud_base_min = Column(Float)
    cloud_ceiling_avg = Column(Float)
    cloud_ceiling_max = Column(Float)
    cloud_ceiling_min = Column(Float)
    cloud_cover_avg = Column(Float)
    cloud_cover_max = Column(Float)
    cloud_cover_min = Column(Float)
    dew_point_avg = Column(Float)
    dew_point_max = Column(Float)
    dew_point_min = Column(Float)
    evapotranspiration_avg = Column(Float)
    evapotranspiration_max = Column(Float)
    evapotranspiration_min = Column(Float)
    evapotranspiration_sum = Column(Float)
    freezing_rain_intensity_avg = Column(Float)
    freezing_rain_intensity_max = Column(Float)
    freezing_rain_intensity_min = Column(Float)
    humidity_avg = Column(Float)
    humidity_max = Column(Float)
    humidity_min = Column(Float)
    ice_accumulation_avg = Column(Float)
    ice_accumulation_lwe_avg = Column(Float)
    ice_accumulation_lwe_max = Column(Float)
    ice_accumulation_lwe_min = Column(Float)
    ice_accumulation_lwe_sum = Column(Float)
    ice_accumulation_max = Column(Float)
    ice_accumulation_min = Column(Float)
    ice_accumulation_sum = Column(Float)
    moonrise_time = Column(DateTime)
    moonset_time = Column(DateTime)
    precipitation_probability_avg = Column(Float)
    precipitation_probability_max = Column(Float)
    precipitation_probability_min = Column(Float)
    pressure_surface_level_avg = Column(Float)
    pressure_surface_level_max = Column(Float)
    pressure_surface_level_min = Column(Float)
    rain_accumulation_avg = Column(Float)
    rain_accumulation_lwe_avg = Column(Float)
    rain_accumulation_lwe_max = Column(Float)
    rain_accumulation_lwe_min = Column(Float)
    rain_accumulation_max = Column(Float)
    rain_accumulation_min = Column(Float)
    rain_accumulation_sum = Column(Float)
    rain_intensity_avg = Column(Float)
    rain_intensity_max = Column(Float)
    rain_intensity_min = Column(Float)
    sleet_accumulation_avg = Column(Float)
    sleet_accumulation_lwe_avg = Column(Float)
    sleet_accumulation_lwe_max = Column(Float)
    sleet_accumulation_lwe_min = Column(Float)
    sleet_accumulation_lwe_sum = Column(Float)
    sleet_accumulation_max = Column(Float)
    sleet_accumulation_min = Column(Float)
    sleet_intensity_avg = Column(Float)
    sleet_intensity_max = Column(Float)
    sleet_intensity_min = Column(Float)
    snow_accumulation_avg = Column(Float)
    snow_accumulation_lwe_avg = Column(Float)
    snow_accumulation_lwe_max = Column(Float)
    snow_accumulation_lwe_min = Column(Float)
    snow_accumulation_lwe_sum = Column(Float)
    snow_accumulation_max = Column(Float)
    snow_accumulation_min = Column(Float)
    snow_accumulation_sum = Column(Float)
    snow_depth_avg = Column(Float)
    snow_depth_max = Column(Float)
    snow_depth_min = Column(Float)
    snow_depth_sum = Column(Float)
    snow_intensity_avg = Column(Float)
    snow_intensity_max = Column(Float)
    snow_intensity_min = Column(Float)
    sunrise_time = Column(DateTime)
    sunset_time = Column(DateTime)
    temperature_apparent_avg = Column(Float)
    temperature_apparent_max = Column(Float)
    temperature_apparent_min = Column(Float)
    temperature_avg = Column(Float)
    temperature_max = Column(Float)
    temperature_min = Column(Float)
    uv_health_concern_avg = Column(Integer)
    uv_health_concern_max = Column(Integer)
    uv_health_concern_min = Column(Integer)
    uv_index_avg = Column(Integer)
    uv_index_max = Column(Integer)
    uv_index_min = Column(Integer)
    visibility_avg = Column(Float)
    visibility_max = Column(Float)
    visibility_min = Column(Float)
    weather_code_max = Column(Integer)
    weather_code_min = Column(Integer)
    wind_direction_avg = Column(Float)
    wind_gust_avg = Column(Float)
    wind_gust_max = Column(Float)
    wind_gust_min = Column(Float)
    wind_speed_avg = Column(Float)
    wind_speed_max = Column(Float)
    wind_speed_min = Column(Float)
    created_at = Column(DateTime, default=datetime.now)
    updated_at = Column(DateTime, default=datetime.now, onupdate=datetime.now)